getwd()
---
title: "Reproducible Research: Peer Assessment 1"
unzip("activity.zip")
data <- read.csv("activity.csv", header = TRUE, sep = ",", na.strings = "NA")
head(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
data$interval <- factor(data$interval)
#ignore missing values
clean_before <- is.na(as.character(data$steps))
clean_data <- data[!clean_before,]
#aggregate steps per day
step_per_day <- aggregate(steps ~ date, data = clean_data, sum)
colnames(step_per_day) <- c("date", "steps")
hist(as.numeric(step_per_day$steps), breaks = 10, col = "blue", xlab="steps", main = "the total number of steps taken each day")
#mean
mean(step_per_day$steps)
#median
median(step_per_day$steps)
#Calculating
average_interval <- aggregate(clean_data$steps, by=list(interval=clean_data$interval), Fun=mean)
average_interval <- aggregate(clean_data$steps, by=list(interval=clean_data$interval), Fun=mean)
average_interval <- aggregate(clean_data$steps, by=list(interval=clean_data$interval), FUN=mean)
colnames(average_interval) <- c("interval", "average_steps")
#Ploting
plot(as.integer(levels(average_interval)), average_interval$average_steps, type="1", xlab="interval", ylab="average steps", main = "average daily activity pattern", col="blue")
average_interval <- aggregate(clean_data$steps, by=list(interval=clean_data$interval), FUN=mean)
colnames(average_interval) <- c("interval", "average_steps")
#Ploting
plot(as.integer(levels(average_interval)), average_interval$average_steps, type="1", xlab="interval", ylab="average steps", main = "average daily activity pattern", col="blue")
plot(as.integer(levels(average_interval$interval)), average_interval$average_steps, type="1", xlab="interval", ylab="average steps", main = "average daily activity pattern", col="blue")
plot(as.integer(levels(average_interval$interval)), average_interval$average_steps, type="l", xlab="interval", ylab="average steps", main = "average daily activity pattern", col="blue")
max_interval <- average_interval[which.max(average_interval$average_steps),]$interval
max_interval
sum(is.na(as.character(data$steps)))
NA_index <- which(is.na(as.character(data$steps)))
complete_data <- data
complete_data[NA_index, ]$steps <- unlist(lapply(NA_index, FUN=function(NA_index){
average_interval[data[NA_index,]$interval==average_interval$interval, ]$average_steps
}))
#see step 2
head(complete_data)
steps_complete <- aggregate(steps ~ date, data = complete_data, sum)
colnames(steps_complete) <- c("date", "steps")
hist(as.numeric(steps_complete$steps), breaks = 10, col = "blue", xlab = "steps", main = "adjusted total number of steps taken each day")
#Mean
mean(steps_complete$steps)
#Median
median(steps_complete$steps)
complete_data$day <- as.factor(weekdays(complete_data$date))
complete_data$is_weekday <- ifelse(!(complete_data$day %in% c("Saturday","Sunday")), TRUE, FALSE)
weekdays_data <- complete_data[complete_data$is_weekday,]
steps_per_interval_weekdays <- aggregate(weekdays_data$steps, by=list(interval=weekdays_data$interval), FUN=mean)
weekends_data <- complete_data[!complete_data$is_weekday,]
steps_per_interval_weekends <- aggregate(weekends_data$steps, by=list(interval=weekends_data$interval), FUN=mean)
colnames(steps_per_interval_weekdays) <- c("interval", "average_steps")
colnames(steps_per_interval_weekends) <- c("interval", "average_steps")
steps_per_interval_weekdays$day <- "Weekday"
steps_per_interval_weekends$day <- "Weekend"
week_data <- rbind(steps_per_interval_weekends, steps_per_interval_weekdays)
week_data$day <- as.factor(week_data$day)
library(lattice)
xyplot(average_steps ~  interval | day, data = week_data, layout = c(1,2), type ="l", ylab="Number of Steps")
